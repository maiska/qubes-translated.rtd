# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-23 17:07+0200\n"
"PO-Revision-Date: 2022-05-23 15:09+0000\n"
"Language-Team: German (https://www.transifex.com/otf/teams/56717/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:2
#: 96b2a17648734b9d9062ad0afb3f7d8d
msgid "DMA errors"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:4
#: a8e4bfce8bbe4672869ce4b365aac58a
msgid ""
"VMs with attached PCI devices in Qubes have allocated a small buffer for DMA"
" operations (called swiotlb). By default, it is 2MB, but some devices (such "
"as the `Realtek RTL8111DL Gigabit Ethernet Controller "
"<https://groups.google.com/group/qubes-"
"devel/browse_thread/thread/631c4a3a9d1186e3>`__) need a larger DMA buffer "
"size. Without a larger buffer, you will face DMA errors such as ``Failed to "
"map TX DMA``."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:11
#: 8780f38921eb49baa7f97e61face8b0e
msgid ""
"To change this allocation, edit VM’s kernel parameters (this is expressed in"
" 512B chunks) by running the following in a dom0 terminal:"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:20
#: 153e73bc58244eb18c99b6f2b44f3348
msgid ""
"The ``8192`` value is the default value and some devices may require a "
"larger value (like ``16384``)."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:24
#: 14d1b84957b343d58c0b40bbfec4c511
msgid "PCI Passthrough Issues"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:26
#: 55d3a7dfd16c4105825a5a2959966141
msgid ""
"Sometimes the PCI arbitrator is too strict, which may cause errors such as "
"``Unable to reset PCI device`` and other PCI-related errors. There is a way "
"to enable permissive mode for it. See also: `this thread "
"<https://groups.google.com/forum/#!topic/qubes-users/Fs94QAc3vQI>`__ and the"
" Xen wiki’s `PCI passthrough "
"<https://wiki.xen.org/wiki/Xen_PCI_Passthrough>`__ page. Other times, you "
"may instead need to disable the FLR requirement on a device."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:35
#: 528f977d306c4047b65711a824bd9aca
msgid ""
"Both can be achieved during attachment with ``qvm-pci`` as described `PCI "
"Devices documentation </user/how-to-guides/how-to-use-pci-"
"devices.html#additional-attach-options>`__."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:40
#: 4ad3d23375a142e8a0e3c3ee38653503
msgid "“Unable to reset PCI device” errors"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:43
#: d18aeb59ccd54690a4c6dc9a502d121d
msgid ""
"libvirt.libvirtError: internal error: Unable to reset PCI device […]: "
"internal error: Active […] devices on bus with […], not doing bus reset"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:45
#: d0f2531bb3f140af9d6a19935d62415b
msgid ""
"After running ``qvm-start sys-net``, you may encounter an error message "
"which begins with ``libvirt.libvirtError: internal error: Unable to reset "
"PCI device``."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:49
#: 708721d99e224036bbc0450447057406
msgid ""
"This issue is likely to occur if you have the same device assigned to more "
"than one VM. When you try to start sys-net with the ``qvm-start sys-net`` "
"command, there is already a VM running (e.g., auto-starting) with one or "
"more of the same devices as those assigned to sys-net."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:55
#: a42ad5e48cf345eaa7fee420fb788aa5
msgid "To fix the error, remove the offending PCI device."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:58
#: 1663cff990e44dc6bb661a9d41b6965b
msgid "Using the Qubes interface"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:60
#: eaab243721fc4ab4b33f1424bb0664cf
msgid ""
"From the “Selected” panel in sys-net, navigate to VM Settings, then Devices."
" There, you can remove the offending PCI device(s) and keep the desired PCI "
"device."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:65
#: afd382c3973d4b9681320d04e8fb895b
msgid "Using the command line"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:67
#: 3133db1148ce4d49a166a2deb99324c1
msgid ""
"To see all the PCI available devices, enter the ``lspci`` command into the "
"dom0 terminal. Each device will be listed on a line, for example:"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:75
#: 1e4c005a76a748baaa786fe783fb21a6
msgid ""
"In the above output, the BDF (Bus Device Function) of the device is "
"``0000:03:00.0``"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:78
#: ff8e7b76cd9643a58139aa8178dfd9e3
msgid ""
"Now that you can see all the PCI devices and their BDFs, you can decide "
"which to remove and which to keep. Imagine we faced the following error "
"message:"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:86
#: d839af58042d43018903818d6005a28c
msgid ""
"In the above case, the device ``0000:03:00.1`` is the device which we want "
"to use. But we are facing the ``Unable to reset PCI device`` error because "
"another device, ``0000:03:00.0``, is active. To fix this error and get "
"device ``0000:03:00.1`` to work, we must first remove the offending device "
"``0000:03:00.0``."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:97
#: 418705564e6147d3a9ae2f4edd0e329c
msgid ""
"In order to make this change persistent, create a file "
"``/etc/systemd/system/qubes-pre-netvm.service`` and add the following:"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:115
#: f5e5e7d5c0534f9892f8173d95faf8ca
msgid ""
"Finally, run ``systemctl enable qubes-pre-netvm.service`` and it will now "
"persist between reboots."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:119
#: cb82246841754efe9f47d84ed994f4b0
msgid ""
"Domain […] has failed to start: internal error: Unable to reset PCI device "
"[…]: no FLR, PM reset or bus reset available"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:121
#: d5207f3fdef84252998640d2fc4b4fd8
msgid ""
"This is a `PCI passthrough issue </user/troubleshooting/pci-"
"troubleshooting.html#pci-passthrough-issues>`__, which occurs when PCI "
"arbitrator is too strict. There is a way to enable permissive mode for it. "
"Sometimes, you may instead need to disable the FLR requirement on a device. "
"Both can be achieved during attachment with ``qvm-pci`` as described below."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:128
#: e6bae0d8ba734dd8bf37b394890f949d
msgid ""
"NOTE: The ``permissive`` flag increases attack surface and possibility of "
"`side channel attacks <https://en.wikipedia.org/wiki/Side-"
"channel_attack>`__. While using the ``no-strict-reset`` flag, do not require"
" PCI device to be reset before attaching it to another VM. This may leak "
"usage data even without malicious intent. Both ``permissive`` and ``no-"
"strict-reset`` options may not be necessary and you should try one first, "
"then the other, before using both."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:141
#: 98209a57829946198857fe2c7f37dc50
msgid ""
"Be sure to replace ``<BDF_OF_DEVICE>`` with the BDF of your PCI device, "
"which can be be obtained from running ``qvm-pci``."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:144
#: df257f3cd4b74e1f9490966cf60f849d
msgid ""
"You can also configure strict reset directly from the Qubes interface by "
"following these steps:"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:147
#: ebb53e35735b40c29364b87589c72413
msgid "Go to the sys-net VM settings"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:149
#: c2ce1853985a4bcbb4ac063fb9befe86
msgid "Go to Devices"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:151
#: 5ead62b879f3411e8d9fcabb41b5e29f
msgid "Make sure the device is in the right field"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:153
#: 33251536a7ed4a5ea9f062ba0cd16bde
msgid "Click “Configure strict reset for PCI devices”"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:155
#: cf4db5a94e62499c96b686dab67d5155
msgid "Select the device, click OK and apply"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:158
#: 9c33c7e70ea243f1b98579d4fb12acb1
msgid "Broadcom BCM43602 Wi-Fi card causes system freeze"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:160
#: 5d9c6f6cf70d4f8ba8ace3425a005a8a
msgid ""
"You may face the problem where the BCM43602 Wi-Fi chip causes a system "
"freeze whenever it is attached to a VM. To fix this problem on a Macbook, "
"follow the steps in `Macbook Troubleshooting <https://github.com/Qubes-"
"Community/Contents/blob/master/docs/troubleshooting/macbook-"
"troubleshooting.md#system-freezes-after-attaching-broadcom-bcm43602-wi-fi-"
"card>`__."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:165
#: 14763e4d05ee4a788580b3ee89fdfd53
msgid ""
"For other non-Macbook machines, it is advisable to replace the Broadcom "
"BCM43602 with one known to work on Qubes, such as the Atheros AR9462."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:168
#: e287257996394ae1b75c363e923dc5a8
msgid ""
"Note that your computer manufacturer may have added a Wi-Fi card whitelist "
"in your BIOS, which will prevent booting your computer if you have a non-"
"listed wireless card. It is possible bypass this limitation by removing the "
"whitelist, disabling a check for it or modifying the whitelist to replace "
"device ID of a whitelisted WiFi card with device ID of your new WiFi card."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:176
#: 336bbd3d15714461b9293b099960cc90
msgid "Wireless card stops working after dom0 update"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:178
#: df03d1b33517453c9a70c9f3ba953150
msgid ""
"There have been many instances where a Wi-Fi card stops working after a dom0"
" update. If you run ``sudo dmesg`` in sys-net, you may see errors beginning "
"with ``iwlwifi``. You can fix the problem by going to the sys-net VM’s "
"settings and changing the VM kernel to the previous version."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:185
#: 45616cf8fe734c83890d2526d8996a03
msgid "Attached devices in Windows HVM stop working on suspend/resume"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:187
#: c67b19dddeac4af3b48c393fb11da55e
msgid ""
"After the whole system gets suspended into S3 sleep and subsequently "
"resumed, some attached devices may stop working. Refer to `Suspend/Resume "
"Troubleshooting </user/troubleshooting/resume-suspend-"
"troubleshooting.html#attached-devices-in-windows-hvm-stop-working-on-"
"suspendresume>`__ for a solution."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:194
#: a67d45b633304336907b191c2a5fa2e8
msgid "PCI device not available in dom0 after being unassigned from a qube"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:196
#: 815b794734e2404db82665bf4dc40335
msgid ""
"After you assign a PCI device to a qube, then unassign it/shut down the "
"qube, the device is not available in dom0. This is an intended feature. A "
"device which was previously assigned to a less trusted qube could attack "
"dom0 if it were automatically reassigned there. Look at the `FAQs "
"</introduction/faq.html#i-assigned-a-pci-device-to-a-qube-then-unassigned-"
"itshut-down-the-qube-why-isnt-the-device-available-in-dom0>`__ to learn how "
"to re-enable the device in dom0."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:204
#: c4e9da4380344627bddf017fd2d2fd1e
msgid "Network adapter does not work"
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:206
#: dee06ca3b8d341f392ba7544971044d7
msgid ""
"You may have an adapter (wired, wireless), that is not compatible with open-"
"source drivers shipped by Qubes. You may need to install a binary blob, "
"which provides drivers, from the linux-firmware package."
msgstr ""

#: ../../../_doc/user/troubleshooting/pci-troubleshooting.rst:210
#: 8d46f2ba7daa41eeaaaaaac9befa21cf
msgid ""
"Open a terminal and run ``sudo dnf install linux-firmware`` in the template "
"upon which your NetVM is based. You have to restart the NetVM after the "
"template has been shut down."
msgstr ""

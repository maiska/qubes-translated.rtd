# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-23 17:29+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../_doc/introduction/faq.rst:2
#: c2090968a5c94d4f8f2b31390cbb4818
msgid "General & Security"
msgstr ""

#: ../../../_doc/introduction/faq.rst:5
#: aaf867199df44c56b65440eb17761f4a
msgid "What is Qubes OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:7
#: d1920f4fd03b4a3ebf15e236b35a2324
msgid "Qubes OS is a security-oriented operating system (OS). The OS is the software that runs all the other programs on a computer. Some examples of popular OSes are Windows, macOS, Android, and iOS. Qubes is free and open-source software (FOSS). This means that everyone is free to use, copy, and change the software in any way. It also means that the source code is openly available so others can contribute to and audit it."
msgstr ""

#: ../../../_doc/introduction/faq.rst:15
#: 8af2fa020b384c1ab484255a136ebf81
msgid "Why is OS security important?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:17
#: 5843838f14264334acd6891c475a6798
msgid "Most people use an operating system like Windows or macOS on their desktop and laptop computers. These OSes are popular because they tend to be easy to use and usually come pre-installed on the computers people buy. However, they present problems when it comes to security. For example, you might open an innocent-looking email attachment or website, not realizing that you’re actually allowing malware (malicious software) to run on your computer. Depending on what kind of malware it is, it might do anything from showing you unwanted advertisements to logging your keystrokes to taking over your entire computer. This could jeopardize all the information stored on or accessed by this computer, such as health records, confidential communications, or thoughts written in a private journal. Malware can also interfere with the activities you perform with your computer. For example, if you use your computer to conduct financial transactions, the malware might allow its creator to make fraudulent transactions in your name."
msgstr ""

#: ../../../_doc/introduction/faq.rst:34
#: 2cf66e9c33544dd4b7ec405fc461bc85
msgid "Aren’t antivirus programs and firewalls enough?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:36
#: 23a5ff12b91947fe9f8f152ea44d4c76
msgid "Unfortunately, conventional security approaches like antivirus programs and (software and/or hardware) firewalls are no longer enough to keep out sophisticated attackers. For example, nowadays it’s common for malware creators to check to see if their malware is recognized by any signature-based antivirus programs. If it’s recognized, they scramble their code until it’s no longer recognizable by the antivirus programs, then send it out. The best of these programs will subsequently get updated once the antivirus programmers discover the new threat, but this usually occurs at least a few days after the new attacks start to appear in the wild. By then, it’s too late for those who have already been compromised. More advanced antivirus software may perform better in this regard, but it’s still limited to a detection-based approach. New zero-day vulnerabilities are constantly being discovered in the common software we all use, such as our web browsers, and no antivirus program or firewall can prevent all of these vulnerabilities from being exploited."
msgstr ""

#: ../../../_doc/introduction/faq.rst:54
#: 72a444e5b3f74dbca6bd7abba7f28b49
msgid "How does Qubes OS provide security?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:56
#: 9badd191581f49cfa4cbb8070b8cea4e
msgid "Qubes takes an approach called **security by compartmentalization**, which allows you to compartmentalize the various parts of your digital life into securely isolated compartments called *qubes*."
msgstr ""

#: ../../../_doc/introduction/faq.rst:60
#: cfcd59a53ad844ebbd9149416a913fb9
msgid "This approach allows you to keep the different things you do on your computer securely separated from each other in isolated qubes so that one qube getting compromised won’t affect the others. For example, you might have one qube for visiting untrusted websites and a different qube for doing online banking. This way, if your untrusted browsing qube gets compromised by a malware-laden website, your online banking activities won’t be at risk. Similarly, if you’re concerned about malicious email attachments, Qubes can make it so that every attachment gets opened in its own single-use :doc:`disposable qube </user/how-to-guides/how-to-use-disposables>`. In this way, Qubes allows you to do everything on the same physical computer without having to worry about a single successful cyberattack taking down your entire digital life in one fell swoop."
msgstr ""

#: ../../../_doc/introduction/faq.rst:73
#: 3234c37c89294360bdbffdad86f2b400
msgid "Moreover, all of these isolated qubes are integrated into a single, usable system. Programs are isolated in their own separate qubes, but all windows are displayed in a single, unified desktop environment with unforgeable colored window borders so that you can easily identify windows from different security levels. Common attack vectors like network cards and USB controllers are isolated in their own hardware qubes while their functionality is preserved through secure :doc:`networking </developer/system/networking>`, :doc:`firewalls </user/security-in-qubes/firewall>`, and :doc:`USB device management </user/how-to-guides/how-to-use-usb-devices>`. Integrated :doc:`file </user/how-to-guides/how-to-copy-and-move-files>` and :doc:`clipboard </user/how-to-guides/how-to-copy-and-paste-text>` copy and paste operations make it easy to work across various qubes without compromising security. The innovative :doc:`Template </developer/system/template-implementation>` system separates software installation from software use, allowing qubes to share a root filesystem without sacrificing security (and saving disk space, to boot). Qubes even allows you to sanitize PDFs and images in a few clicks. Those concerned about physical hardware attacks will benefit from :doc:`Anti Evil Maid </user/security-in-qubes/anti-evil-maid>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:93
#: 289739b12afc4fb192f5bb0340a8a40b
msgid "How does Qubes OS provide privacy?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:95
#: 9a1bfca8352f4857af9f05d3673decef
msgid "There can be no privacy without security, since security vulnerabilities allow privacy measures to be circumvented. This makes Qubes exceptionally well-suited for implementing effective privacy tools."
msgstr ""

#: ../../../_doc/introduction/faq.rst:99
#: c25f1ee85ce744ae8d7162b9d3eff3a1
msgid "Users concerned about privacy will appreciate the `integration of Whonix into Qubes <https://www.whonix.org/wiki/Qubes>`__, which makes it easy to use `Tor <https://www.torproject.org/>`__ securely. For more information about how to use this powerful tool correctly and safely, please see `Qubes-Whonix Guides <https://www.whonix.org/wiki/Qubes#Guides>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:106
#: ee0a8de4a76547739bc7c3079090f1b8
msgid "For the privacy policies covering our website, repositories, Qubes OS itself, and more, please see :doc:`Privacy Policy </introduction/privacy>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:110
#: c3efb2409bf24b7695774bcc6a42d0f7
msgid "What about privacy in non-Whonix qubes?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:112
#: 3190c2d34fbc4df8840b64842073503b
msgid "The main way Qubes OS `provides privacy <#how-does-qubes-os-provide-privacy>`__ is via its `integration with Whonix <https://www.whonix.org/wiki/Qubes>`__. Qubes OS does not claim to provide special privacy (as opposed to security) properties in non-Whonix qubes. This includes :doc:`disposables </user/how-to-guides/how-to-use-disposables>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:119
#: 97f3bd95e016417f92acc32fdf1af0cc
msgid "For example, a standard :doc:`Fedora </user/templates/fedora/fedora>` qube is expected to have basically the same privacy properties as that upstream Fedora distribution, enhanced to some degree by the control Qubes provides over that qube. For most users, this level of privacy may be good enough for many common activities. However, users seeking more advanced privacy features should use Whonix qubes."
msgstr ""

#: ../../../_doc/introduction/faq.rst:126
#: 22f2d05d0cc34a2abd5e2fed36f6509c
msgid "Privacy is far more difficult than is commonly understood. In addition to the `web browser <https://www.torproject.org/projects/torbrowser/design/>`__, there is also `VM fingerprinting <https://www.whonix.org/wiki/VM_Fingerprinting>`__ and `advanced deanonymization attacks <https://www.whonix.org/wiki/Advanced_Deanonymization_Attacks>`__ that most users have never considered (and this is just to mention a few examples). The `Whonix Project <https://www.whonix.org/>`__ specializes in `protecting against these risks <https://www.whonix.org/wiki/Protocol-Leak-Protection_and_Fingerprinting-Protection>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:138
#: 8e0e7dd80ea5447f8355a00b9065a57d
msgid "In order to achieve the same results in non-Whonix qubes (including disposables), one would have to reinvent Whonix. Such duplication of effort makes no sense when Whonix already exists and is already integrated into Qubes OS."
msgstr ""

#: ../../../_doc/introduction/faq.rst:143
#: fa9048ea641d4ede816b63c104ed152f
msgid "Therefore, when you need privacy, you should use Whonix qubes. Remember, though, that privacy is difficult to achieve and maintain. Whonix is a powerful tool, but no tool is perfect. Read the `documentation <https://www.whonix.org/wiki/Documentation>`__ thoroughly and exercise care when using it."
msgstr ""

#: ../../../_doc/introduction/faq.rst:150
#: 1581dd4ebaa04ac69f3cf0e1f3b47a63
msgid "How does Qubes OS compare to using a “live CD” OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:152
#: 8f52ecf637164fb3bc700c2ee3825cda
msgid "Booting your computer from a live CD (or DVD) when you need to perform sensitive activities can certainly be more secure than simply using your main OS, but this method still preserves many of the risks of conventional OSes. For example, popular live OSes (such as `Tails <https://tails.boum.org/>`__ and other Linux distributions) are still **monolithic** in the sense that all software is still running in the same OS. This means, once again, that if your session is compromised, then all the data and activities performed within that same session are also potentially compromised."
msgstr ""

#: ../../../_doc/introduction/faq.rst:163
#: 8ad2b0439a484428a286462d7e786977
msgid "How does Qubes OS compare to running VMs in a conventional OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:165
#: 172d2823a0f9466f8b1d8a2427053885
msgid "Not all virtual machine software is equal when it comes to security. You may have used or heard of VMs in relation to software like VirtualBox or VMware Workstation. These are known as “Type 2” or “hosted” hypervisors. (The **hypervisor** is the software, firmware, or hardware that creates and runs virtual machines.) These programs are popular because they’re designed primarily to be easy to use and run under popular OSes like Windows (which is called the **host** OS, since it “hosts” the VMs). However, the fact that Type 2 hypervisors run under the host OS means that they’re really only as secure as the host OS itself. If the host OS is ever compromised, then any VMs it hosts are also effectively compromised."
msgstr ""

#: ../../../_doc/introduction/faq.rst:177
#: e18b1f6a540c4a53be56855559fb0bba
msgid "By contrast, Qubes uses a “Type 1” or “bare-metal” hypervisor called `Xen <https://www.xenproject.org/>`__. Instead of running inside an OS, Type 1 hypervisors run directly on the “bare metal” of the hardware. This means that an attacker must be capable of subverting the hypervisor itself in order to compromise the entire system, which is vastly more difficult."
msgstr ""

#: ../../../_doc/introduction/faq.rst:184
#: 9cec17c547a4461b85a79820dca21e8a
msgid "Qubes makes it so that multiple VMs running under a Type 1 hypervisor can be securely used as an integrated OS. For example, it puts all of your application windows on the same desktop with special colored borders indicating the trust levels of their respective VMs. It also allows for things like secure copy/paste operations between VMs, securely copying and transferring files between VMs, and secure networking between VMs and the Internet."
msgstr ""

#: ../../../_doc/introduction/faq.rst:193
#: b2bf8a0fe1e443d7b860321f8c80d0fd
msgid "How does Qubes OS compare to using a separate physical machine?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:195
#: 1804a3eb6804400ea33f1aa9aef9a38e
msgid "Using a separate physical computer for sensitive activities can certainly be more secure than using one computer with a conventional OS for everything, but there are still risks to consider. Briefly, here are some of the main pros and cons of this approach relative to Qubes:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:202
#: b9bd5fa5e7e54b87b1e3df1a73ec66eb
msgid "Pros"
msgstr ""

#: ../../../_doc/introduction/faq.rst:204
#: 5db9278b77c8420abf9b0aa78c29dcc9
msgid "Physical separation doesn’t rely on a hypervisor. (It’s very unlikely that an attacker will break out of Qubes’ hypervisor, but if one were to manage to do so, one could potentially gain control over the entire system.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:208
#: 5efde2c120ba4b87984e154efea6638a
msgid "Physical separation can be a natural complement to physical security. (For example, you might find it natural to lock your secure laptop in a safe when you take your unsecure laptop out with you.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:218
#: 38bde31b714e4246b4594e76673d9738
msgid "Physical separation can be cumbersome and expensive, since we may have to obtain and set up a separate physical machine for each security level we need."
msgstr ""

#: ../../../_doc/introduction/faq.rst:221
#: 28fddaf9e399466484a72bfb00e02d05
msgid "There’s generally no secure way to transfer data between physically separate computers running conventional OSes. (Qubes has a secure inter-VM file transfer system to handle this.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:224
#: 9cfdf4e69d6c42298ce4b37836e6f22b
msgid "Physically separate computers running conventional OSes are still independently vulnerable to most conventional attacks due to their monolithic nature."
msgstr ""

#: ../../../_doc/introduction/faq.rst:227
#: 3ddbd83197364e0e89992dca14e7eb4f
msgid "Malware which can bridge air gaps has existed for several years now and is becoming increasingly common."
msgstr ""

#: ../../../_doc/introduction/faq.rst:230
#: a80242bcff2442afa26b5253a262c9c5
msgid "(For more on this topic, please see the paper `Software compartmentalization vs. physical separation <https://invisiblethingslab.com/resources/2014/Software_compartmentalization_vs_physical_separation.pdf>`__.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:235
#: 333fb2d3c87640ad8316de764e2f8c44
msgid "What is the main concept behind Qubes?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:237
#: 74256f5d383749af9bd7343ded55fe39
msgid "To build security on the “Security by Compartmentalization (or Isolation)” principle."
msgstr ""

#: ../../../_doc/introduction/faq.rst:241
#: 6dcad8d595e2476ca5d0818a1c6fd8c3
msgid "What about other approaches to security?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:243
#: 762ad0de6e2f420b89d084b8fe6fad78
msgid "The other two popular `approaches <https://blog.invisiblethings.org/2008/09/02/three-approaches-to-computer-security.html>`__ are “Security by Correctness” and “Security by Obscurity.” We don’t believe either of these approaches are capable of providing reasonable security today, nor do we believe that they will be capable of doing so in the foreseeable future."
msgstr ""

#: ../../../_doc/introduction/faq.rst:251
#: 5bb4a25f706c4d08a62f474f7c2224d6
msgid "How is Qubes different from other security solutions?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:253
#: 0576927c609245ee86fdd6f26b9d5c1b
msgid "Please see this `article <https://blog.invisiblethings.org/2012/09/12/how-is-qubes-os-different-from.html>`__ for a thorough discussion."
msgstr ""

#: ../../../_doc/introduction/faq.rst:258
#: cae97c1c7172421f8264434bb977f2ad
msgid "Is Qubes just another Linux distribution?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:260
#: 6842d93782474516bcafd5f42d8a83a3
msgid "If you really want to call it a distribution, then it’s more of a “Xen distribution” than a Linux one. But Qubes is much more than just Xen packaging. It has its own VM management infrastructure, with support for template VMs, centralized VM updating, etc. It also has a very unique GUI virtualization infrastructure."
msgstr ""

#: ../../../_doc/introduction/faq.rst:267
#: daba120916434e4289a576bdd4c9d832
msgid "What about safe languages and formally verified microkernels?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:269
#: 0f25512b884b48efaac453b09cf2e6d7
msgid "In short: these are non-realistic solutions today. We discuss this in further depth in our `Architecture Specification document </attachment/doc/arch-spec-0.3.pdf>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:274
#: 4dece65820ed48d5897452105dbe112f
msgid "Why does Qubes use virtualization?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:276
#: 5a57ae54d1c8455e89ec3ee265b1b646
msgid "We believe that this is currently the only practically viable approach to implementing strong isolation while simultaneously providing compatibility with existing applications and drivers."
msgstr ""

#: ../../../_doc/introduction/faq.rst:281
#: 97d527c4df33459bba676ff8457c81c3
msgid "Does Qubes use full disk encryption (FDE)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:283
#: 84ebaa458e2f47feb2eeb9b026b69d05
msgid "Yes, of course! Full disk encryption is enabled by default. Specifically, we use `LUKS <https://en.wikipedia.org/wiki/Linux_Unified_Key_Setup>`__/`dm-crypt <https://en.wikipedia.org/wiki/Dm-crypt>`__. You can even :doc:`manually configure your encryption parameters </user/downloading-installing-upgrading/custom-install>` if you like!"
msgstr ""

#: ../../../_doc/introduction/faq.rst:290
#: 4be92c43504f4693800046f8128d321b
msgid "What do all these terms mean?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:292
#: f211e27d9f8449b7aee5615e74c69fd1
msgid "All Qubes-specific terms are defined in the :doc:`glossary </user/reference/glossary>`"
msgstr ""

#: ../../../_doc/introduction/faq.rst:296
#: 8c58c460ad134812b6eb2aa3686dc1a3
msgid "Does Qubes run every app in a separate VM?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:298
#: 43bd952315394887a36c154e86c97f14
msgid "No! This would not make much sense. Qubes uses lightweight VMs to create security qubes (e.g., “work,” “personal,” and “banking,”). A typical user would likely need around five qubes. Very paranoid users, or those who are high-profile targets, might use a dozen or more qubes."
msgstr ""

#: ../../../_doc/introduction/faq.rst:304
#: f460c46c005e4ac5b303a3590dcabf17
msgid "Why does Qubes use Xen instead of KVM or some other hypervisor?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:306
#: 46ee3ad2c85f428ebde9a8b7cf10d478
msgid "In short: we believe the Xen architecture allows for the creation of more secure systems (i.e. with a much smaller TCB, which translates to a smaller attack surface). We discuss this in much greater depth in our `Architecture Specification document </attachment/doc/arch-spec-0.3.pdf>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:313
#: 55d414b93e684006a3b3fdacb0b0a64f
msgid "How is Qubes affected by Xen Security Advisories (XSAs)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:315
#: 806a64afd3194caa9d1757e3c3e62a72
msgid "See the :doc:`XSA Tracker </project-security/xsa>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:318
#: 738057ca3f3449e58d08d3c1b65bb8a9
msgid "What about this other/new (micro)kernel/hypervisor?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:320
#: a75e769301cd45b99d5394f74ad02024
msgid "Whenever starting a discussion about another (micro)kernel or hypervisor in relation to Qubes, we strongly suggest including answers to the following questions first:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:324
#: a4b218d4266049e9aa9c5464f9e5c587
msgid "What kinds of containers does it use for isolation? Processes? PV VMs? Fully virtualized VMs (HVMs)? And what underlying h/w technology is used (ring0/3, VT-x)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:327
#: 48098a903b034f0284a6f038a7f5bef5
msgid "Does it require specially written/built applications (e.g. patched Firefox)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:329
#: 33cbdf598f3349afb4cb7396f2ef8574
msgid "Does it require custom drivers, or can it use Linux/Windows ones?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:330
#: cbde8c66ccf845ee93716e6b23411fd5
msgid "Does it support VT-d, and does it allow for the creation of untrusted driver domains?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:332
#: 6c65a43b3cbb49e6956a77d2750c0f22
msgid "Does it support S3 sleep?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:333
#: ebea11d41dd94d5a80eebbe5629f2522
msgid "Does it work on multiple CPUs/Chipsets?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:334
#: 5fbca2d82fec4012ab3de7171dc3fe2d
msgid "What are the performance costs, more or less? (e.g. “XYZ prevents concurrent execution of two domains/processes on shared cores of a single processor”, etc.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:337
#: e6831a32496b44c28b08546434885310
msgid "Other special features? E.g. eliminates cooperative covert channels between VMs?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:340
#: ce06f4d4f1004c4c838f65d9472b9644
msgid "Here are the answers for Xen 4.1 (which we use as of 2014-04-28):"
msgstr ""

#: ../../../_doc/introduction/faq.rst:342
#: 88a959d44e724a2ba1c1efbfcd3e652f
msgid "PV and HVM Virtual Machines (ring0/3 for PV domains, VT-x/AMD-v for HVMs)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:344
#: 68f7ab4f0de24b309697418e750939af
msgid "Runs unmodified usermode apps (binaries)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:345
#: a182526bb3fc47ec98acada30a9c74b3
msgid "Runs unmodified Linux drivers (dom0 and driver domains). PV VMs require special written pvdrivers."
msgstr ""

#: ../../../_doc/introduction/faq.rst:347
#: f049b0ff74b9422aa6b095ed6d87714b
msgid "Full VT-d support including untrusted driver domains."
msgstr ""

#: ../../../_doc/introduction/faq.rst:348
#: efe5d044f63e493590a37406ce430d41
msgid "S3 sleep supported well."
msgstr ""

#: ../../../_doc/introduction/faq.rst:349
#: 98a2201ab1234ef581b88573af62db07
msgid "Works on most modern CPUs/Chipsets."
msgstr ""

#: ../../../_doc/introduction/faq.rst:350
#: 7d487ebe59da43d08d39a120e28bfc4d
msgid "Biggest performance hit on disk operations (especially in Qubes when complex 2-layer mapping used for Linux qubes). No GPU virtualization."
msgstr ""

#: ../../../_doc/introduction/faq.rst:352
#: fb26ebe528d24797bf3357ac4bf2e072
msgid "Mostly WorksTM :)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:355
#: cd0b1ecd8bef4e0397eacdb19127dd17
msgid "Which virtualization modes do VMs use?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:357
#: 10bc9c64f5544f5ab1405e4dde61171e
msgid "Here is an overview of the VM virtualization modes:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:360
#: a92064608f464695b118f29d2eeb4281
msgid "VM type"
msgstr ""

#: ../../../_doc/introduction/faq.rst:360
#: 7d63d1341d1d45d685865b6e4dada2de
msgid "Mode"
msgstr ""

#: ../../../_doc/introduction/faq.rst:362
#: 9654857e947d4ad99799dcdf4cc52868
msgid "Default VMs without PCI devices (most VMs)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:362
#: 6c5645fca41946aa9f96630831b7d834
msgid "PVH"
msgstr ""

#: ../../../_doc/introduction/faq.rst:363
#: 9af1d7462621478c86748fa631e63d3c
msgid "Default VMs with PCI devices"
msgstr ""

#: ../../../_doc/introduction/faq.rst:363
#: 1c599661afc949f7ba53fee43e3f5394
msgid "HVM"
msgstr ""

#: ../../../_doc/introduction/faq.rst:364
#: 416ba06800404e6d83afa2534c38e4ef
msgid "Stub domains - Default VMs w/o PCI devices"
msgstr ""

#: ../../../_doc/introduction/faq.rst:364
#: 7e8b93aade254d11a73c5455f4695e1f
msgid "N/A"
msgstr ""

#: ../../../_doc/introduction/faq.rst:365
#: 1d6b090beb374116985517e0b30edd09
msgid "Stub domains - Default VMs w/ PCI devices"
msgstr ""

#: ../../../_doc/introduction/faq.rst:365
#: ../../../_doc/introduction/faq.rst:366
#: 6a4f54a7d54b4d339fb08612cf1f4b36
#: c835cc344065474e8713784ba26d672b
msgid "PV"
msgstr ""

#: ../../../_doc/introduction/faq.rst:366
#: d461b8ad258a460ca34b13046af2822d
msgid "Stub domains - HVMs"
msgstr ""

#: ../../../_doc/introduction/faq.rst:370
#: 10689c127a2a45b0aae2959390448b75
msgid "What’s so special about Qubes’ GUI virtualization?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:372
#: d77d0a8996ef4941847b04ef9ee8a960
msgid "We have designed the GUI virtualization subsystem with two primary goals: security and performance. Our GUI infrastructure introduces only about 2,500 lines of C code (LOC) into the privileged domain (Dom0), which is very little, and thus leaves little space for bugs and potential attacks. At the same time, due to the smart use of Xen shared memory, our GUI implementation is very efficient, so most virtualized applications really feel as if they were executed natively."
msgstr ""

#: ../../../_doc/introduction/faq.rst:381
#: 6ab4a2ddd33849eca4d9367843dd5cdb
msgid "Why passwordless sudo?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:383
#: a557076cb7d2495eb9a7ad4c5e806b4a
msgid "Please refer to :doc:`this page </user/security-in-qubes/vm-sudo>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:386
#: ecd12506c89c420b8d3908b62b8dc7bf
msgid "Why is dom0 so old?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:388
#: 96325815a7e54016ada3f601a0b962c0
msgid "Please see:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:390
#: 7d967485cdcb491d90cd92b8c522209a
msgid ":doc:`Installing and updating software in dom0 </user/advanced-topics/how-to-install-software-in-dom0>`"
msgstr ""

#: ../../../_doc/introduction/faq.rst:392
#: 26ca58d1baf0440287d7642674447cc5
msgid "`Note on dom0 and EOL </user/downloading-installing-upgrading/supported-releases.html#note-on-dom0-and-eol>`__"
msgstr ""

#: ../../../_doc/introduction/faq.rst:396
#: e93973ee3f174843ab412e8cce057734
msgid "Do you recommend coreboot as an alternative to vendor BIOS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:398
#: 9f7df9d4191344afaa46b8d3b105987c
msgid "Yes, where it is possible to use it an open source boot firmware ought to be more trustable than a closed source implementation. `coreboot <https://www.coreboot.org/>`__ is as a result a requirement for `Qubes Certified Hardware <https://www.qubes-os.org/news/2016/07/21/new-hw-certification-for-q4/>`__. The number of machines coreboot currently supports is limited and the use of some vendor supplied blobs is generally still required. Where coreboot does support your machine and is not already installed, you will generally need additional hardware to flash it. Please see the coreboot website / their IRC channel for further information."
msgstr ""

#: ../../../_doc/introduction/faq.rst:410
#: ffc816e914174bcea747f014a697351f
msgid "How should I report documentation issues?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:412
#: c9d42f644a464781ab92e5d535c24073
msgid "If you can fix the problem yourself, please see :doc:`how to edit the documentation </developer/general/how-to-edit-the-documentation>`. If not, please see :doc:`issue tracking </introduction/issue-tracking>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:417
#: eeda3c2a1f5f49e88c5666d9ff677167
msgid "Will Qubes seek to get certified under the GNU Free System Distribution Guidelines (GNU FSDG)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:419
#: 2255238fea7449af8093643d9cbf779a
msgid "Not currently, for the same reasons that `Debian is not certified <https://www.gnu.org/distros/common-distros.en.html>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:423
#: a85321865ef9494a9b1d29b20bb3be57
msgid "Should I trust this website?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:425
#: 55bbd2f9a43f4588ae579627433cb105
msgid "This website is hosted on `GitHub Pages <https://pages.github.com/>`__ (`why? <#why-do-you-use-github>`__). Therefore, it is largely outside of our control. We don’t consider this a problem, however, since we explicitly `distrust the infrastructure <#what-does-it-mean-to-distrust-the-infrastructure>`__. For this reason, we don’t think that anyone should place undue trust in the live version of this site on the Web. Instead, if you want to obtain your own trustworthy copy of this website in a secure way, you should clone our `website repo <https://github.com/QubesOS/qubesos.github.io>`__, `verify the PGP signatures on the commits and/or tags </project-security/verifying-signatures.html#how-to-verify-signatures-on-git-repository-tags-and-commits>`__ signed by the `doc-signing keys <https://github.com/QubesOS/qubes-secpack/tree/master/keys/doc-signing>`__ (which indicates that the content has undergone `review </developer/general/how-to-edit-the-documentation.html#security>`__), then either `render the site on your local machine <https://github.com/QubesOS/qubesos.github.io/blob/master/README.md#instructions>`__ or simply read the source, the vast majority of which was `intentionally written in Markdown so as to be readable as plain text for this very reason </developer/general/documentation-style-guide.html#markdown-conventions>`__. We’ve gone to special effort to set all of this up so that no one has to trust the infrastructure and so that the contents of this website are maximally available and accessible."
msgstr ""

#: ../../../_doc/introduction/faq.rst:451
#: c9dd7a6a981547fb8dc456c30f032fcc
msgid "What does it mean to “distrust the infrastructure”?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:453
#: 3e5b2c3f19f14b2599bfb465bb44269c
msgid "A core tenet of the Qubes philosophy is “distrust the infrastructure,” where “the infrastructure” refers to things like hosting providers, CDNs, DNS services, package repositories, email servers, PGP keyservers, etc. As a project, we focus on securing endpoints instead of attempting to secure “the middle” (i.e., the infrastructure), since one of our primary goals is to free users from being forced to entrust their security to unknown third parties. Instead, our aim is for users to be required to trust as few entities as possible (ideally, only themselves and any known persons whom they voluntarily decide to trust)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:463
#: dad600eb8b7946a9963b01a2443e7768
msgid "Users can never fully control all the infrastructure they rely upon, and they can never fully trust all the entities who do control it. Therefore, we believe the best solution is not to attempt to make the infrastructure trustworthy, but instead to concentrate on solutions that obviate the need to do so. We believe that many attempts to make the infrastructure appear trustworthy actually provide only the illusion of security and are ultimately a disservice to real users. Since we don’t want to encourage or endorse this, we make our distrust of the infrastructure explicit."
msgstr ""

#: ../../../_doc/introduction/faq.rst:473
#: ../../../_doc/introduction/faq.rst:491
#: 4b93f076298e4893b3063141d9e7c4d4
#: f2318727e6f54f4bb5ed6c7b4472e811
msgid "Also see: `Should I trust this website? <#should-i-trust-this-website>`__"
msgstr ""

#: ../../../_doc/introduction/faq.rst:477
#: f7f1b102b8214d848a0f0ca2c661b319
msgid "Why do you use GitHub?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:479
#: 85d5a8ad734d45b4889b6593d3202b2b
msgid "Three main reasons:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:481
#: b781937c9cf64696ac19fa563f722a6a
msgid "We `distrust the infrastructure <#what-does-it-mean-to-distrust-the-infrastructure>`__ including GitHub (though there are aspects we’re still `working on <https://github.com/QubesOS/qubes-issues/issues/3958>`__)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:485
#: 688cb12be975488fb44beed68eac0f4e
msgid "It’s free (as in beer). We’d have to spend either time or money to implement a solution ourselves or pay someone to do so, and we can’t spare either one right now."
msgstr ""

#: ../../../_doc/introduction/faq.rst:488
#: a5922cfe43504dfa911a959ca26f2753
msgid "It has low admin/overhead requirements, which is very important, given how little time we have to spare."
msgstr ""

#: ../../../_doc/introduction/faq.rst:495
#: 8eb2c7cd719443609a971c1b3a711498
msgid "Why doesn’t this website have security feature X?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:497
#: df7922d207ca489197acce54edcc575b
msgid "Although we caution users against `placing undue trust in this website <#should-i-trust-this-website>`__ because we `distrust the infrastructure <#what-does-it-mean-to-distrust-the-infrastructure>`__, we have no objection to enabling website security features when doing so is relatively costless and provides some marginal benefit to website visitors. So, if feature X isn’t enabled, it’s most likely for one of three reasons:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:505
#: 822ea022e22f448db682836282c6c832
msgid "Our GitHub Pages platform doesn’t support it."
msgstr ""

#: ../../../_doc/introduction/faq.rst:506
#: 6266534d254240a09a923c68505fd580
msgid "Our platform supports it, but we’ve decided not to enable it."
msgstr ""

#: ../../../_doc/introduction/faq.rst:507
#: e840921c1c7747e0b9f1dd509d46679a
msgid "Our platform supports it, but we’re not aware that we can enable it or have forgotten to do so."
msgstr ""

#: ../../../_doc/introduction/faq.rst:510
#: a49de7e62c374eddb311addba7a1e49e
msgid "If it seems like a feature that we can and should enable, please `let us know </introduction/issue-tracking>`!"
msgstr ""

#: ../../../_doc/introduction/faq.rst:514
#: 1f6606cc398e43e7bdeedf051f086bb4
msgid "Users"
msgstr ""

#: ../../../_doc/introduction/faq.rst:517
#: cd982938b9ca4b389d76bd5ce86b7cd5
msgid "Can I watch YouTube videos in qubes?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:519
#: 9b63d9129d5d4637806610da58168ef6
msgid "Absolutely."
msgstr ""

#: ../../../_doc/introduction/faq.rst:522
#: a239d6a4a548431e883190b6c0dae0de
msgid "Can I run applications, like games, which require hardware acceleration?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:524
#: 3e68fedc28b849f5a6cdece3ac0439b9
msgid "Those won’t fly. We do not provide GPU virtualization for Qubes. This is mostly a security decision, as implementing such a feature would most likely introduce a great deal of complexity into the GUI virtualization infrastructure. However, Qubes does allow for the use of accelerated graphics (e.g. OpenGL) in dom0’s Window Manager, so all the fancy desktop effects should still work. App qubes use a software-only (CPU-based) implementation of OpenGL, which may be good enough for basic games and applications."
msgstr ""

#: ../../../_doc/introduction/faq.rst:533
#: 9bc6fea4af7a4a34a02ef276dca23d18
msgid "For further discussion about the potential for GPU passthrough on Xen/Qubes, please see the following threads:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:536
#: 1c192c085a414d368f6f98534f715268
msgid "`GPU passing to HVM <https://groups.google.com/group/qubes-devel/browse_frm/thread/31f1f2da39978573?scoring=d&q=GPU&>`__"
msgstr ""

#: ../../../_doc/introduction/faq.rst:538
#: 7a2c34a2a34c483a87065adc194699cc
msgid "`Clarifications on GPU security <https://groups.google.com/group/qubes-devel/browse_frm/thread/31e2d8a47c8b4474?scoring=d&q=GPU&>`__"
msgstr ""

#: ../../../_doc/introduction/faq.rst:542
#: 36ddea200d2a4a1bbfa6f8295b3c69c4
msgid "Is Qubes a multi-user system?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:544
#: 23f72fbee3204781ad2c4a2c7660bcb4
msgid "No. Qubes does not pretend to be a multi-user system. Qubes assumes that the user who controls Dom0 controls the whole system. It is very difficult to **securely** implement multi-user support. See `here <https://groups.google.com/group/qubes-devel/msg/899f6f3efc4d9a06>`__ for details."
msgstr ""

#: ../../../_doc/introduction/faq.rst:550
#: 4a50d9b2a6a949fe8d9414681ac35a14
msgid "However, in Qubes 4.x we will be implementing management functionality. See `Admin API <https://www.qubes-os.org/news/2017/06/27/qubes-admin-api/>`__ and `Core Stack <https://www.qubes-os.org/news/2017/10/03/core3/>`__ for more details."
msgstr ""

#: ../../../_doc/introduction/faq.rst:555
#: 59eea45675f34940865d538c6705778e
msgid "What are the system requirements for Qubes OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:557
#: d0a00326e3874f24a9be31fcde88210c
msgid "See the :doc:`system requirements </user/hardware/system-requirements>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:560
#: 1c39dd916abb4d76b0e27c8c84f7e56e
msgid "Is there a list of hardware that is compatible with Qubes OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:562
#: 730794c24c3d459c82ff6ffb0fef58f8
msgid "See the :doc:`Hardware Compatibility List </user/hardware/hcl>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:565
#: 7d6ad125a49546d7a5a5d57babfac303
msgid "Is there any certified hardware for Qubes OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:567
#: 5bd1a53c570b4848b1468b97ea1e16fa
msgid "See `Certified Hardware </user/hardware/certified-hardware>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:570
#: 09dd6c11f60949be8d2138213fb02e1a
msgid "How much disk space does each qube require?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:572
#: 054821ec156346caad6ad18d7b1b7fb7
msgid "Each qube is created from a template and shares the root filesystem with this template (in a read-only manner). This means that each qube needs only as much disk space as is necessary to store its own private data. This also means that it is possible to update the software for several qubes simultaneously by running a single update process in the template upon which those qubes are based. (These qubes will then have to be restarted in order for the update to take effect in them.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:581
#: 28853885349145a9a280bda32624ea53
msgid "How much memory is recommended for Qubes?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:583
#: a6ba5c6582304f2aa3c57a626358104d
msgid "Please see the :doc:`system requirements </user/hardware/system-requirements>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:586
#: 7494e9f9488a4234827666a4c6d83cc3
msgid "Can I install Qubes on a system without VT-x/AMD-V or VT-d/AMD-Vi/AMD IOMMU?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:588
#: 0f89a4ecbd714026a53a257f78640547
msgid "Please see the :doc:`system requirements </user/hardware/system-requirements>` for the latest information. If you are receiving an error message on install saying your “hardware lacks the features required to proceed”, check to make sure the virtualization options are enabled in your BIOS/UEFI configuration. You may be able to install without the required CPU features for testing purposes only, but VMs (in particular, sys-net) may not function correctly and there will be no security isolation. For more information, see :doc:`Qubes-certified hardware </user/hardware/certified-hardware>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:599
#: 2b83886dc0c94d8797833d02e57b0c36
msgid "Why is VT-x/AMD-V important?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:601
#: 4ee26aa52fd1409a82fc6d0dc5ad4866
msgid "By default, Qubes uses Xen’s PVH and HVM virtualization modes, which require VT-x/AMD-V. This means that, without VT-x/AMD-V, no VMs will start in a default Qubes installation. In addition, if your system lacks VT-x/AMD-V, then it also lacks VT-d/AMD-Vi/AMD IOMMU. (See next question.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:608
#: 8a363edeb15440968d9a7b97588543fe
msgid "Why is VT-d/AMD-Vi/AMD IOMMU important?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:610
#: a6a9dc6268ab4a7c812f6859491a2300
msgid "On a system without VT-d/AMD-Vi/AMD IOMMU, there will be no real security benefit to having a separate NetVM, as an attacker could always use a simple `DMA attack <#what-is-a-dma-attack>`__ to go from the NetVM to Dom0. Nonetheless, all of Qubes’ other security mechanisms, such as qube separation, work without VT-d/AMD-Vi/AMD IOMMU. Therefore, a system running Qubes without VT-d/AMD-Vi/AMD IOMMU would still be significantly more secure than one running Windows, Mac, or Linux."
msgstr ""

#: ../../../_doc/introduction/faq.rst:619
#: 073e8f6f1f254409b9ad665d4187369a
msgid "What is a DMA attack?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:621
#: c6889ec425a94f2eb7b1fb0ee4ecc41f
msgid "Direct Memory Access (DMA) is mechanism for PCI devices to access system memory (read/write). Without VT-d/AMD-Vi/AMD IOMMU, any PCI device can access all the memory, regardless of the VM to which it is assigned (or if it is left in dom0). Most PCI devices allow the driver to request an arbitrary DMA operation (like “put received network packets at this address in memory”, or “get this memory area and send it to the network”). So, without VT-d/AMD-Vi/AMD IOMMU, it gives unlimited access to the whole system. Now, it is only a matter of knowing where to read/write to take over the system, instead of just crashing. But since you can read the whole memory, it isn’t that hard."
msgstr ""

#: ../../../_doc/introduction/faq.rst:632
#: 7075896caa2f4c54a0acc5252e4c6cd4
msgid "Now, how does this apply to Qubes OS? The above attack requires access to a PCI device, which means that it can be performed only from the NetVM or USB VM, so someone must first break into one of those VMs. But this isn’t that hard, because there is a lot of complex code handling network traffic. There is a history of bugs in DHCP clients, DNS clients, etc. Most attacks on the NetVM and USB VM (but not all of them!) require being somewhat close to the target system, for example, being connected to the same Wi-Fi network, or in the case of a USB VM, having physical access to a USB port."
msgstr ""

#: ../../../_doc/introduction/faq.rst:643
#: b18810ebde0047f18da6d084dfc6c42e
msgid "Can I use AMD-v instead of VT-x?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:645
#: 7be24ee357b643ccb1da7136b1edac2e
msgid "Yes, and see `this message <https://groups.google.com/group/qubes-devel/msg/6412170cfbcb4cc5>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:649
#: 2a1a3ccdb56b48efac27f604bd6ccefa
msgid "Can I install Qubes in a virtual machine (e.g., on VMware)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:651
#: 74d2126e2096429c803a4a9001a0b357
msgid "Some users have been able to do this, but it is neither recommended nor supported. Qubes should be installed bare-metal. (After all, it uses its own bare-metal hypervisor!)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:656
#: c634887adf3a49b4961f1c4e98b156ac
msgid "What is a terminal?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:658
#: c524837fa3f54eceb3666e98d6820584
msgid "A `terminal emulator <https://en.wikipedia.org/wiki/Terminal_emulator>`__, nowadays often referred to as just a *terminal*, is a program which provides a text window. Inside that window, a `shell <https://en.wikipedia.org/wiki/Shell_(computing)>`__ is typically running in it. A shell provides a `command-line interface <https://en.wikipedia.org/wiki/Command-line_interface>`__ where the user can enter and run `commands <https://en.wikipedia.org/wiki/Command_(computing)>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:668
#: f50083ed98254b15a39f0c69199945cc
msgid "See introductions on Wikibooks: `here <https://en.wikibooks.org/wiki/Fedora_And_Red_Hat_System_Administration/Shell_Basics>`__, `here <https://en.wikibooks.org/wiki/A_Quick_Introduction_to_Unix>`__ and `here <https://en.wikibooks.org/wiki/Bash_Shell_Scripting>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:674
#: f8a7f5b33bd6405a808ef49c5e0843bf
msgid "Why does my network adapter not work?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:676
#: f1e88083d7644881ba063f7c420369fe
msgid "You may have an adapter (wired, wireless), that is not compatible with open-source drivers shipped by Qubes. You may need to install a binary blob, which provides drivers, from the linux-firmware package."
msgstr ""

#: ../../../_doc/introduction/faq.rst:680
#: 6307fd09e0b64d1cb67a367bc9c18f13
msgid "Open a terminal and run ``sudo dnf install linux-firmware`` in the template upon which your NetVM is based. You have to restart the NetVM after the template has been shut down."
msgstr ""

#: ../../../_doc/introduction/faq.rst:685
#: b4bae47106814f069bdb645d4aaf47df
msgid "Can I install Qubes OS together with other operating system (dual-boot/multi-boot)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:687
#: 78976664f4f84a0ca6f484165eb3b0ba
msgid "You shouldn’t do that, because it poses a security risk for your Qubes OS installation. But if you understand the risk and accept it, read `documentation on multibooting <https://github.com/Qubes-Community/Contents/blob/master/docs/configuration/multiboot.md>`__. It begins with an explanation of the risks with such a setup."
msgstr ""

#: ../../../_doc/introduction/faq.rst:694
#: b9fae431787c441fa38300d7fc767e6c
msgid "Which version of Qubes am I running?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:696
#: 1cc09e09184946b7a35745be787c9091
msgid "See :doc:`here </developer/releases/version-scheme.html#check-installed-version>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:699
#: 0a6a7b253f0d4a47ba1c1edb95901bb6
msgid "My qubes lost internet access after a template update. What should I do?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:701
#: ede7f70807a746be9712aa544a6db5b3
msgid "See `Update Troubleshooting </user/troubleshooting/update-troubleshooting.html#lost-internet-access-after-a-template-update>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:705
#: 7b81c666c0ed47028ee85f59e2547a59
msgid "My keyboard layout settings are not behaving correctly. What should I do?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:707
#: 8d263d789aff4018ac3c5cb31e5c58d4
msgid "See `Hardware Troubleshooting </user/troubleshooting/hardware-troubleshooting.html#keyboard-layout-settings-not-behaving-correctly>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:711
#: bbc398ef96c94423946c72aa0430bbcd
msgid "My dom0 and/or template update stalls when attempting to update via the GUI tool. What should I do?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:713
#: 40d794dd03874f01803ef972f74edd48
msgid "This can usually be fixed by updating via the command line."
msgstr ""

#: ../../../_doc/introduction/faq.rst:715
#: 8cdb4bc6af0b4226b8cf76f30dab2547
msgid "In dom0, open a terminal and run ``sudo qubes-dom0-update``."
msgstr ""

#: ../../../_doc/introduction/faq.rst:717
#: 1285c5a55adb4a3db97c63e8a9ecd26b
msgid "In your templates, open a terminal and run ``sudo dnf upgrade``."
msgstr ""

#: ../../../_doc/introduction/faq.rst:720
#: 8c58f6a16be540fdaf50639ec3cb3e4a
msgid "How do I run a Windows HVM in non-seamless mode (i.e., as a single window)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:722
#: 9757b53e1b374668a25807586bb9f240
msgid "Enable “debug mode” in the qube’s settings, either by checking the box labeled “Run in debug mode” in the Qubes VM Manager qube settings menu or by running the ``qvm-prefs`` command."
msgstr ""

#: ../../../_doc/introduction/faq.rst:727
#: 32f235f4da254eeabe6db5032cc8f2e2
msgid "I created a USB VM and assigned USB controllers to it. Now the USB VM won’t boot."
msgstr ""

#: ../../../_doc/introduction/faq.rst:729
#: a9a4cc84b0c742299e6a4a971c3747b8
msgid "This is probably because one of the controllers does not support reset. See the `USB Troubleshooting guide </user/troubleshooting/usb-troubleshooting.html#usb-vm-does-not-boot-after-creating-and-assigning-usb-controllers-to-it>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:734
#: 91e2354bbc3b4c148f1cdb1be83e7eb5
msgid "I assigned a PCI device to a qube, then unassigned it/shut down the qube. Why isn’t the device available in dom0?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:736
#: 405be1e71f3e44a1849db7ec4b3f2f39
msgid "This is an intended feature. A device which was previously assigned to a less trusted qube could attack dom0 if it were automatically reassigned there. In order to re-enable the device in dom0, either:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:740
#: 21db06a3373540e68c34048dac7c1f94
msgid "Reboot the physical machine."
msgstr ""

#: ../../../_doc/introduction/faq.rst:742
#: 309d61daa5b14f8895bfa6da05fa2661
msgid "or"
msgstr ""

#: ../../../_doc/introduction/faq.rst:744
#: 920418605a6f451fb95ef362b6eb584d
msgid "Go to the sysfs (``/sys/bus/pci``), find the right device, detach it from the pciback driver and attach back to the original driver. Replace ``<BDF>`` with your device, for example ``00:1c.2``:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:755
#: 0f386d22bc67430daa8a37a6a3d3a1b2
msgid "See also :doc:`here </user/how-to-guides/how-to-use-pci-devices>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:758
#: 42befa19d3444b59be0950a7ada2826c
msgid "How do I play video files?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:760
#: 4d4856ad01c54646ba968898fe7b2059
msgid "If you’re having trouble playing a video file in a qube, you’re probably missing the required codecs. The easiest way to resolve this is to install VLC Media Player and use that to play your video files. You can do this in multiple different template distros (Fedora, Debian, etc.)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:765
#: 1079b37682bf4fc684226749bd92338c
msgid "For Debian:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:767
#: 6cc1bee8dd114fa8ae8dfdceb771a6c9
msgid "(Recommended) Clone an existing Debian template"
msgstr ""

#: ../../../_doc/introduction/faq.rst:769
#: ../../../_doc/introduction/faq.rst:784
#: e3363fd91ae748d5a471558a94b5a50f
#: 9a76c138cd184490ba61f62cfa370274
msgid "Install VLC in that template:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:775
#: ../../../_doc/introduction/faq.rst:790
#: cf6cb79de5da411baf1b87b3e7ef50be
#: f0babe1a3c6a4f098ab5cf453469ea4d
msgid "Use VLC to play your video files."
msgstr ""

#: ../../../_doc/introduction/faq.rst:777
#: 42d7ad3f03774bb9a3b0f523e2b55408
msgid "For Fedora:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:779
#: 85c1d967957d496b94cb9acdac0ac3b0
msgid "(Recommended) Clone an existing Fedora template"
msgstr ""

#: ../../../_doc/introduction/faq.rst:781
#: 0c0652e4cfa94ca88c094faf4e7743df
msgid "`Enable the appropriate RPMFusion repos in the desired Fedora template </user/how-to-guides/how-to-install-software.html#rpmfusion-for-fedora-templates>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:793
#: 77168121f2ae448da1b7989ba4a5c43c
msgid "How do I access my external drive?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:795
#: c4ca4a5a840245c3b844eebe78b250ab
msgid "The recommended approach is to pass only the specific partition you intend to use from ```sys-usb`` </doc/usb/>`__ to another qube via ``qvm-block``. They will show up in the destination qube as ``/dev/xvd*`` and must be mounted manually. Another approach is to attach the entire USB drive to your destination qube. However, this could theoretically lead to an attack because it forces the destination qube to parse the device’s partition table. If you believe your device is safe, you may proceed to attach it."
msgstr ""

#: ../../../_doc/introduction/faq.rst:804
#: 970b8c7b898c4d8690c4a2a5b87154ea
msgid "In Qubes 4.0, this is accomplished with the Devices Widget located in the tool tray (default top right corner, look for an icon with a yellow square). From the top part of the list, click on the drive you want to attach, then select the qube to attach it to. Although you can also attach the entire USB device to a qube by selecting it from the bottom part of the list, in general this approach should not be used because you are exposing the target qube to unnecessary additional attack surface."
msgstr ""

#: ../../../_doc/introduction/faq.rst:813
#: 01c55cedfa734b43b2e6a2e5768e4617
msgid "Although external media such as external hard drives or flash drives plugged in via USB are available in the USB qube, it is not recommended to access them directly from inside the USB qube. See :doc:`Block (Storage) Devices </user/how-to-guides/how-to-use-block-storage-devices>` for more information."
msgstr ""

#: ../../../_doc/introduction/faq.rst:820
#: 998c662f7be94454beddf47187ce4629
msgid "My encrypted drive doesn’t appear in Debian qube."
msgstr ""

#: ../../../_doc/introduction/faq.rst:822
#: bc5d6679f9b64803a6b7b9eba8b03b43
msgid "This is an issue that affects qubes based on Debian Jessie. The problem is fixed in Stretch, and does not affect Fedora-based qubes."
msgstr ""

#: ../../../_doc/introduction/faq.rst:825
#: e4b6c8bef10145d5895aeb4c29cd490d
msgid "A mixed drive with some encrypted partitions appears correctly in Nautilus. The encrypted partitions are identified and the user is prompted for password on attempting to mount the partition."
msgstr ""

#: ../../../_doc/introduction/faq.rst:829
#: a70fe3f2e58340e696016a35ca60d08c
msgid "A fully encrypted drive does not appear in Nautilus."
msgstr ""

#: ../../../_doc/introduction/faq.rst:831
#: 1e5db5dba1c04ed480ac1450bdaaf659
msgid "The workaround is to manually decrypt and mount the drive:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:833
#: 393fbde8ecb8488b922f7dda7f19c22b
msgid "Attach USB device to qube - it should be attached as ``/dev/xvdi`` or similar."
msgstr ""

#: ../../../_doc/introduction/faq.rst:835
#: 8f3bd377910f4a01a4dca37bedb29c3b
msgid "``sudo cryptsetup open /dev/xvdi bk --type luks``"
msgstr ""

#: ../../../_doc/introduction/faq.rst:836
#: ef5e5216e5ef420aa04e5efd2cbea02b
msgid "``sudo cryptsetup status /dev/mapper/bk`` (Shows useful status info.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:837
#: 81dde5d1beca4c539de7f0f64b64a369
msgid "``sudo mount /dev/mapper/bk /mnt``"
msgstr ""

#: ../../../_doc/introduction/faq.rst:839
#: 6ba68e8407804987a45294659a345890
msgid "The decrypted device is now available at ``/mnt`` - when you have finished using it unmount and close the drive."
msgstr ""

#: ../../../_doc/introduction/faq.rst:842
#: 0caa9ad280384c41bb16e50b7420c2b9
msgid "``sudo umount /mnt``"
msgstr ""

#: ../../../_doc/introduction/faq.rst:843
#: aee850f4e7504703a5ba1428fdbf28c1
msgid "``sudo cryptsetup close bk --type luks``"
msgstr ""

#: ../../../_doc/introduction/faq.rst:844
#: f100eeb417284568b0113bc13f720d59
msgid "Remove USB from qube."
msgstr ""

#: ../../../_doc/introduction/faq.rst:847
#: 242577659ca541179551768e076ef33e
msgid "Windows Update is stuck."
msgstr ""

#: ../../../_doc/introduction/faq.rst:849
#: 77cbf1d4843d4c0cb56cd1d0c8d70017
msgid "This has nothing to do with Qubes. `It’s a longstanding Windows bug. <https://superuser.com/questions/951960/windows-7-sp1-windows-update-stuck-checking-for-updates>`__"
msgstr ""

#: ../../../_doc/introduction/faq.rst:853
#: 33e78de47d7d4548b72dcac3622c36dd
msgid "Fullscreen Firefox is frozen."
msgstr ""

#: ../../../_doc/introduction/faq.rst:855
#: 8adf8d14a71e4010b44cfeccd4489d92
msgid "Press ``F11`` twice."
msgstr ""

#: ../../../_doc/introduction/faq.rst:858
#: d343af08a82e481abc1827e3437d2655
msgid "I have weird graphics glitches like the screen turning partially black."
msgstr ""

#: ../../../_doc/introduction/faq.rst:860
#: 0f5148318ad143f9ad6c3843c912cade
msgid "If it seems like the issue described in `this thread <https://github.com/QubesOS/qubes-issues/issues/2399>`__, try disabling the window compositor:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:864
#: 1f561ae7ffda49938cef2bcef74a2bf4
msgid "Q → System Tools → Window Manager Tweaks → Compositor → uncheck “Enable display compositing”"
msgstr ""

#: ../../../_doc/introduction/faq.rst:867
#: d3f5b12c21734a1d98fc7dd25ca04991
msgid "Please report (via the mailing lists) if you experience this issue, and whether disabling the compositor fixes it for you or not."
msgstr ""

#: ../../../_doc/introduction/faq.rst:871
#: d3b6d694b43f4b2498cfbbfc3bc1b470
msgid "My HVM in Qubes R4.0 won’t let me start/install an OS"
msgstr ""

#: ../../../_doc/introduction/faq.rst:873
#: 50335b943d1047a4b9fb0148ba6c4cbb
msgid "I see a screen popup with SeaBios and 4 lines, last one being ``Probing EDD (edd=off to disable!... ok``."
msgstr ""

#: ../../../_doc/introduction/faq.rst:876
#: 6c08f405e892469a80160e0de1107585
msgid "From a ``dom0`` prompt, enter:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:883
#: 8771b5475ba4441ea640444df32eabe1
msgid "When I try to install a template, it says no match is found."
msgstr ""

#: ../../../_doc/introduction/faq.rst:885
#: 684d105d6265417f9db05f04b5edf273
msgid "See `VM Troubleshooting </user/troubleshooting/vm-troubleshooting.html#no-match-found-when-trying-to-install-a-template>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:889
#: 913d694c2a004550a13f3e9bed60dc4e
msgid "I keep getting “Failed to synchronize cache for repo” errors when trying to update my Fedora templates"
msgstr ""

#: ../../../_doc/introduction/faq.rst:891
#: d370d847bf534d89b2ad6f206e6afe41
msgid "See `Update Troubleshooting </user/troubleshooting/update-troubleshooting.html#failed-to-synchronize-cache-for-repo-errors-when-updating-fedora-templates>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:895
#: c0dc69e3f80046efbddd9c98204ef1a2
msgid "I see a “Failed to start Load Kernel Modules” message on boot"
msgstr ""

#: ../../../_doc/introduction/faq.rst:897
#: be722270be894c7c88406d4b3f5c0ae7
msgid "The full message looks like:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:904
#: 15e8ed89b39145828da69a2e7b0f8e9e
msgid "This is cosmetic only, and can safely be ignored."
msgstr ""

#: ../../../_doc/introduction/faq.rst:907
#: 05bb95beb3ef480fa22e364952856875
msgid "Why is Qubes so slow and how can I make it faster?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:909
#: 2a0bcf07a6a243e8a162e6eb0769fb12
msgid "During boot, Qubes starts several virtual machines. Having so many qubes running at once inevitably strains the resources of your computer and causes slowness. The most effective way to speed up Qubes is to get more powerful hardware – a fast CPU, a lot of memory and fast SSDs. Qubes is slower when reading from the disk because of the VM overhead, which is why we recommend installing it on a fast SSD."
msgstr ""

#: ../../../_doc/introduction/faq.rst:917
#: a7dd3bce55b74458a1a89813e04b6890
msgid "Could you please make my preference the default?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:919
#: a5a81f5e862741449ea66df270959725
msgid "Wouldn’t it be great if Qubes were configured just the way you like it by default with all of your favorite programs and settings? Then you could just install Qubes without having to install any programs in it or adjust any settings! You might even think that if a particular program or setting works so well for *you*, it would work well for *everyone*, so you’d actually be doing everyone a favor! The problem is that Qubes has :doc:`tens of thousands of different users </introduction/statistics>` with radically different needs and purposes. There is no particular configuration that will be ideal for everyone (despite how much you might feel that your preference would be better for everyone), so the best we can do is to put power in the hands of users to configure their Qubes installations the way they like (subject to security constraints, of course). Please don’t ask for your favorite program to be installed by default or for some setting that obviously varies by user preference to be changed so that it matches *your* preference. This is an incredibly selfish attitude that demonstrates a complete lack of consideration for the thousands of other Qubes users who don’t happen to share your preferences."
msgstr ""

#: ../../../_doc/introduction/faq.rst:939
#: 62faa18cd9b345fc9270e828f6c489af
msgid "Software installed in a qube is gone after restarting. Why?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:941
#: 03433f270ca141a195facecefdad1449
msgid "Software must be :doc:`installed in the template </user/how-to-guides/how-to-install-software>` on which your qube is based."
msgstr ""

#: ../../../_doc/introduction/faq.rst:945
#: 2d3e1c3e63a1417e90c58a791872aa55
msgid "Developers"
msgstr ""

#: ../../../_doc/introduction/faq.rst:948
#: d6d82eed271e48e9ab943414ae6827c4
msgid "Are there restrictions on the software that the Qubes developers are willing to use?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:950
#: ce788f888405418c937b1d1a65465928
msgid "Yes. In general, the Qubes developers will not use a piece of software unless there is an *easy* way to verify both its **integrity** and **authenticity**, preferably via PGP signatures (see :doc:`Verifying Signatures </project-security/verifying-signatures>`). Specifically:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:955
#: bdc5597e46164103b0145b66c6c4e575
msgid "If PGP signatures are used, the signing key(s) should have well-publicized fingerprint(s) verifiable via multiple independent channels or be accessible to the developers through a web of trust."
msgstr ""

#: ../../../_doc/introduction/faq.rst:958
#: 8f3bdd730a4f42868eff8511419fc60d
msgid "If the software is security-sensitive and requires communication with the outside world, a “split” implementation is highly preferred (for examples, see :doc:`Split GPG </user/security-in-qubes/split-gpg>` and :doc:`Split Bitcoin </external/security-guides/split-bitcoin>`)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:962
#: e43ed0442d374629aabf772135e2c6ef
msgid "If the software has dependencies, these should be packaged and available in repos for a `current, Qubes-supported version </user/downloading-installing-upgrading/supported-releases.html#templates>`__ of Fedora (preferred) or Debian (unless all the insecure dependencies can run in an untrusted VM in a “split” implementation)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:967
#: 14c1fb39f80d4394912097e78c9534d7
msgid "If the software must be built from source, the source code and any builders must be signed. (Practically speaking, the more cumbersome and time-consuming it is to build from source, the less likely the developers are to use it.)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:973
#: 6baaaa42613843099b130d12ac72bd12
msgid "Why does dom0 need to be 64-bit?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:975
#: f80b95cc1e0140b2a1c79ff6e2e139c7
msgid "Since 2013 `Xen has not supported 32-bit x86 architecture <https://wiki.xenproject.org/wiki/Xen_Project_Release_Features>`__ and Intel VT-d, which Qubes uses to isolate devices and drivers, is available on Intel 64-bit processors only."
msgstr ""

#: ../../../_doc/introduction/faq.rst:980
#: 3268b8d28ab047e4bb382239e98ca40c
msgid "In addition, with features like improved ASLR, it is often more difficult to exploit a bug on x64 Linux than x86 Linux. While we designed Qubes from the beginning to limit potential attack vectors, we still realize that some of the code running in Dom0, e.g. our GUI daemon or xen-store daemon, however simple, might contain some bugs. Plus since we haven’t implemented a separate storage domain, the disk backends are in Dom0 and are “reachable” from the VMs, which adds up to the potential attack surface. So, having faced a choice between 32-bit and 64-bit OS for Dom0, it was almost a no-brainer. The 64-bit option provides some (little perhaps, but some) more protection against some classes of attacks, and at the same time does not have any disadvantages except the extra requirement of a 64 bit processor. And even though Qubes now “needs” a 64 bit processor, it didn’t make sense to run Qubes on a system without 3-4GB of memory, and those have 64-bit CPUs anyway."
msgstr ""

#: ../../../_doc/introduction/faq.rst:996
#: 9fe87bf464bc44f88486df1255582dee
msgid "What is the recommended build environment for Qubes OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:998
#: f8ded89c6f7548a78a857bfeebdc18ec
msgid "Any rpm-based, 64-bit environment, the preferred OS being Fedora."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1001
#: b43cbbcb4ad3438ebe74c9ddaabc608f
msgid "How do I build Qubes from sources?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1003
#: 550f90b864ce463b86bcdea9a007e70b
msgid "See :doc:`these instructions </developer/building/qubes-builder>`."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1006
#: 46a857cfda6941d19cea68c4315cdb71
msgid "How do I submit a patch?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1008
#: 227ac459390843d09d084ec3c76e4098
msgid "See the :doc:`Qubes Source Code Repositories </developer/code/source-code>` article."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1011
#: 64dc7296228d4f27be70b54b1e8352d8
msgid "What is Qubes’ attitude toward changing guest distros?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1013
#: 8ef27f7e992749d59bc354670c37ae56
msgid "We try to respect each distro’s culture, where possible. See the discussion on issue `#1014 <https://github.com/QubesOS/qubes-issues/issues/1014>`__ for an example."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1018
#: 2dac1bae24754b34971e7fe6f3429d72
msgid "The policy is there mostly to ease maintenance, on several levels:"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1020
#: 5cd68cd9d8774ec8a981ab8f131b3778
msgid "Less modifications means easier migration to new upstream distribution releases."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1022
#: 15cce2f23ec248208e5b3e401eedde29
msgid "The upstream documentation matches the distribution running in the Qubes VM."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1024
#: fb1d13c893274114a6218656670787f2
msgid "We’re less likely to introduce Qubes-specific issues."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1025
#: 79aa076c5dc3493b9dd666c1645cdeec
msgid "Each officially supported distribution (ideally) should offer the same set of Qubes-specific features - a change in one supported distribution should be followed also in others, including new future distributions."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1031
#: 4a9181ecbdfe46c8be88cbc9906659db
msgid "Why don’t you fix upstream bugs that affect Qubes OS?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1033
#: a0288f00179b4d7fa6ac4e9c8017723d
msgid "First, a bit of background in case you’re new to the open-source software world: There are a huge number of different open-source projects that each focus on the software they create and maintain. Some focus on specific frameworks, libraries, and background subsystems that most users never see. Others focus on specific tools and apps that use these frameworks, libraries, and background subsystems. Still others focus on combining many different tools and apps. And some, like Qubes OS, are entire operating systems that include all kinds of other software. When one piece of software uses a different piece of software, the piece of software being used is said to be “upstream,” while the piece of software using it said to be “downstream.” For example, Qubes OS uses the Xen hypervisor, so Xen is upstream relative to Qubes, and Qubes is downstream relative to Xen (and likewise for the respective project that creates and maintains each piece of software)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1048
#: b7b9bf5cd58c4f2f875ea2a4c2c5fb21
msgid "Many open-source operating systems, including Qubes OS, are transparent about the fact that they are “compilations” of upstream software. By contrast, proprietary, commercial operating systems like Windows and macOS tend to either obscure this fact or avoid using upstream software in favor of doing everything in-house, because they have the huge workforce and commercial revenue that allows them to do so. If you’re accustomed to using a proprietary, commercial operating system, then you may need some time to get used to the fact that Qubes OS is a compilation of many different pieces of open-source software."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1058
#: 9f2014af90124431b44c9586d1c7c113
msgid "Now, let’s get to the original question: Why don’t we fix upstream bugs that affect Qubes OS? This question can come up in different ways. For example, many people, especially those who aren’t familiar with how open-source software development works, wonder why we sometimes close :doc:`issues </introduction/issue-tracking>` as “not our bug.” Don’t we care about the Qubes users who are affected by these bugs? Are we really so cold and heartless?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1066
#: 411e5f193a604705936420cea4802302
msgid "On the contrary, it is precisely because we care so much about Qubes users that we do this. It’s important to understand that Qubes OS combines different pieces of software from a very large number of upstream projects (especially since it includes entire separate OSes inside of itself) and that many of these projects have much larger workforces and much more funding than we do. They are better equipped to fix bugs in their own software. Not only are they the ones who wrote the code, they’re also more familiar with how best to integrate any fixes into the entire code base for maintainability. Besides, they own the code. We can’t force any other project to accept a patch, even if we sincerely believe it’s a good bug fix. In some cases, we have to maintain our own fork of an upstream project, which just adds to our ongoing maintenance burden."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1080
#: ba08c0e799dc4d018cc68c1621c9fa6d
msgid "In contrast to some of the large upstream projects whose software we use, the Qubes OS Project is small, lean, and focused on one goal: creating and maintaining a reasonably secure operating system for regular desktop users. The Qubes core developers are specialists. They are among the best in the world at virtualization security, low-level system security, and implementing security-by-compartmentalization at the operating-system level. There are many aspects of Qubes OS engineering work for which they are uniquely qualified. Recognizing this, it only makes sense to focus their time where it will provide the greatest benefit, on doing security-related work that only they can do. By contrast, it would be a wasteful misallocation of skill and talent (to the long-term detriment of Qubes users) to have them fixing bugs that are in code they didn’t write, that doesn’t belong to them, that (in some cases) belongs to a huge upstream project with ample time and resources, and that the upstream project is equally capable of fixing (and, in many cases, is *better* suited to fix, as that’s *their* area of specialization)."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1098
#: 70db15feb80744658ed7cebb4271156f
msgid "Moreover, the question is based on a faulty assumption in the first place, because we already *do* in fact fix some upstream bugs that affect Qubes OS. For example, the Qubes core developers have made significant upstream Xen contributions, particularly in the area of security, as that’s where our developers specialize. So, the original question should really be rephrased to ask, “Why don’t you fix *every* upstream bug that affects Qubes OS?” In light of the foregoing explanation, we hope you agree that this would be an unreasonable expectation."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1108
#: d448703318d5484a93e23bf46ac9a941
msgid "“Very well,” you might be thinking, “but there’s still an upstream bug that affects me! What can I do about it?” Recall what we discussed above about how the open-source world works. If there’s a bug in some piece of upstream software, then there’s an open-source project responsible for creating and maintaining that software. They’re the ones who wrote the code and who are best equipped to fix the bug. You should file a bug report in *that* project’s issue tracker instead. Not only will you be helping all other affected Qubes users, you’ll also be helping *all* downstream users of that software!"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1118
#: 97d24f982a384118a4434d029aa14c51
msgid "(Note: If you’re wondering about cases in which a bug has already been fixed upstream but hasn’t yet arrived in your Qubes OS release, please see `backports </introduction/issue-tracking.html#backports>`__. These are *not* cases in which an issue is closed as “not our bug.”)"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1124
#: 70a0b66da4ce49cf950dd9b80697d707
msgid "Is the I/O emulation component (QEMU) part of the Trusted Computing Base (TCB)?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1126
#: ad05273de1044865ae7fa8dd0fb73263
msgid "No. Unlike many other virtualization systems, Qubes takes special effort to keep QEMU *outside* of the TCB. This has been achieved thanks to the careful use of Xen’s stub domain feature. For more details about how we improved on Xen’s native stub domain use, see `here <https://blog.invisiblethings.org/2012/03/03/windows-support-coming-to-qubes.html>`__."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1133
#: 47b8df67fda7460790eea9ca129e7ce6
msgid "Is Secure Boot supported?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1135
#: e09579125f564110830c24b12b359c79
msgid "UEFI Secure Boot is not supported out of the box as UEFI support in Xen is very basic. Arguably secure boot reliance on UEFI integrity is not the best design. The relevant binaries (shim.efi, xen.efi, kernel / initramfs) are not signed by the Qubes Team and secure boot has not been tested. Intel TXT (used in :doc:`Anti Evil Maid </user/security-in-qubes/anti-evil-maid>`) at least tries to avoid or limit trust in BIOS. See the Heads project `[1] <https://trmm.net/Heads>`__ `[2] <http://osresearch.net/>`__ for a better-designed non-UEFI-based secure boot scheme with very good support for Qubes."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1146
#: ee1df1b2128f4f6c86e1e4c76a6ee135
msgid "What is the canonical way to detect Qubes VM?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1148
#: 4f570956b8cf4fd6ab1e194a3ebe6c11
msgid "Check ``/usr/share/qubes/marker-vm`` file existence. Additionally, its last line contains Qubes release version (e.g., ``4.0``). The file was introduced after the initial Qubes 4.0 release. If you need to support not-fully-updated systems, check for the existence of ``/usr/bin/qrexec-client-vm``."
msgstr ""

#: ../../../_doc/introduction/faq.rst:1155
#: ad3468969bad40c6bfccb3bc5e4735b8
msgid "Is there a way to automate tasks for continuous integration or DevOps?"
msgstr ""

#: ../../../_doc/introduction/faq.rst:1157
#: 1d14f1c2e6624a5cb7f29576789f5990
msgid "Yes, Qubes natively supports automation via :doc:`Salt (SaltStack) </user/advanced-topics/salt>`. There is also the unofficial `ansible-qubes toolkit <https://github.com/Rudd-O/ansible-qubes>`__. (**Warning:** Since this is an external project that has not been reviewed or endorsed by the Qubes team, `allowing it to manage dom0 may be a security risk <https://github.com/Qubes-Community/Contents/blob/master/docs/security/security-guidelines.md#dom0-precautions>`__.)"
msgstr ""

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-23 17:29+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../_doc/developer/services/qfileexchgd.rst:1
#: 68225a0239c04556ad27ff3b089ec160
msgid "**This mechanism is obsolete as of Qubes Beta 1!**"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:3
#: 0e5992a331d6496482b1f553086e69d7
msgid "Please see this :doc:`page </developer/services/qfilecopy>` instead."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:6
#: 3e4d8c840c6e436d8b62556ebd48a31f
msgid "Overview"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:8
#: eec6f3b1216242d7a9b9dfc578b633e5
msgid "*qfilexchgd* is a dom0 daemon responsible for managing exchange of block devices (“virtual pendrives”) between VMs. It is used for"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:11
#: c5325c067a4c46baa138c67e1edce69c
msgid "copying files between AppVMs"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:12
#: 8e25230c84db446c9fc77107ccad7306
msgid "copying a single file between an AppVM and a DisposableVM"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:14
#: 91d0880dd27f4fd9bd5632e934f2fe25
msgid "*qfilexchgd* is started after first *qubes_guid* has been started, so that it has access to X display in dom0 to present dialog messages."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:17
#: 1c701d50428c418b8553c828069cefc0
msgid "*qfilexchgd* is event driven. The sources of events are:"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:19
#: dba974324e344d419dc61bc42a9e572c
msgid "trigger of xenstore watch for the changes in ``/local/domain`` xenstore hierarchy - to detect start/stop of VMs, and maintain vmname->vm_xid dictionary"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:22
#: 1f1b7c7cd91f4450badf27042beb8859
msgid "trigger of xenstore watch for a change in ``/local/domain/domid/device/qpen`` key - VMs write to this key to request service from *qfilexchgd*"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:27
#: fbdcd2e57061425bba0aeb9d87dc5bd8
msgid "Copying files between AppVMs"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:29
#: 519e93bfa5b9437cb8c86e14893dbcde
msgid "AppVM1 user runs *qvm-copy-to-vm* script (accessible from Dolphin file manager by right click on a “file(s)->Actions->Send to VM” menu). It calls */usr/lib/qubes/qubes_penctl new*, and it writes “new” request to its ``device/qpen`` xenstore key. *qfilexchgd* creates a new 1G file, makes vfat fs on it, and does block-attach so that this file is attached as ``/dev/xvdg`` in AppVM1."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:35
#: 8ce10dcc144d475697f032a60f62143d
msgid "AppVM1 mounts ``/dev/xvdg`` on ``/mnt/outgoing`` and copies requested files there, then unmounts it."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:37
#: 0d8c2c03b13d4f14996c29acb49638c6
msgid "AppVM1 writes “send DestVM” request to its ``device/qpen`` xenstore key (calling */usr/lib/qubes/qubes_penctl send DestVM*). After getting confirmation by displaying a dialog box in dom0 display, *qfilexchgd* detaches ``/dev/xvdg`` from AppVM1, attaches it as ``/dev/xvdh`` to DestVM."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:42
#: 9970e504e3224d75b208faff97719400
msgid "In DestVM, udev script for ``/dev/xvdh`` named *qubes_add_pendrive_script* (see ``/etc/udev/rules.d/qubes.rules``) mounts ``/dev/xvdh`` on ``/mnt/incoming``, and then waits for ``/mnt/incoming`` to become unmounted. A file manager running in DestVM shows a new volume, and user in DestVM may copy files from it. When user in DestVM is done, then user unmounts ``/mnt/incoming``. *qubes_add_pendrive*\\ \\_script then tells *qfilexchgd* to detach ``/dev/xvdh`` and terminates."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:52
#: 2b310e1f836b4b678af7933e5f623191
msgid "Copying a single file between AppVM and a DisposableVM"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:54
#: 988ae5aaab544bd2b1190181aba16af4
msgid "In order to minimize attack surface presented by necessity to process virtual pendrive metadata sent by (potentially compromised and malicious) DisposableVM, AppVM<->DisposableVM file exchange protocol does not use any filesystem."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:59
#: 3060078b05724933bf81eaf1b28902bb
msgid "User in AppVM1 runs *qvm-open-in-dvm* (accessible from Dolphin file manager by right click on a “file->Actions->Open in DisposableVM” menu). *qvm-open-in-dvm*"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:63
#: 6dcade0f71fa460ea9bb7676e6149c3f
msgid "gets a new ``/dev/xvdg`` (just as described in previous paragraph)"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:64
#: 0afb8d0c199c465f900c328ee35499e2
msgid "computes a new unique transaction seq SEQ by incrementing ``/home/user/.dvm/seq`` contents,"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:66
#: d8386be387e24be08c25578c775294c9
msgid "writes the requested file name (say, /home/user/document.txt) to ``/home/user/.dvm/SEQ``"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:68
#: b09956443f1f4f768b70541e29fb9645
msgid "creates a dvm_header (see core.git/appvm/dvm.h) on ``/dev/xvdg``, followed by file contents"
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:70
#: 0f437001409b4cc79bc87e52e24cda64
msgid "writes the “send disposable SEQ” command to its ``device/qpen`` xenstore key."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:73
#: 85b7e1ec87ef41fbb91ebf4cdda46619
msgid "*qfilexchgd* sees that “send” argument==“disposable”, and creates a new DisposableVM by calling */usr/lib/qubes/qubes_restore*. It adds the new DisposableVM to qubesDB via qvm_collection.add_new_disposablevm. Then it attaches the virtual pendrive (previously attached as ``/dev/xvdg`` at AppVM1) as ``/dev/xvdh`` in DisposableVM."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:79
#: b363d5fc9f1740f38e6fd5ecf73ed6a1
msgid "In DisposableVM, *qubes_add_pendrive_script* sees non-zero ``qubes_transaction_seq`` key in xenstore, and instead processing the virtual pendrive as in the case of normal copy, treats it as DVM transaction (a request, because we run in DisposableVM). It retrieves the body of the file passed in ``/dev/xvdh``, copies to /tmp, and runs *mime-open* utility to open appropriate executable to edit it. When *mime-open* returns, if the file was modified, it is sent back to AppVM1 (by writing “send AppVM1 SEQ” to ``device/qpen`` xenstore key). Then DisposableVM destroys itself."
msgstr ""

#: ../../../_doc/developer/services/qfileexchgd.rst:88
#: 677c02d434e640cdae0b50cc9f563c37
msgid "In AppVM1, a new ``/dev/xvdh`` appears (because DisposableVM has sent it). *qubes_add_pendrive_script* sees non-zero ``qubes_transaction_seq`` key, and treats it as DVM transaction (a response, because we run in AppVM, not DisposableVM). It retrieves the filename from ``/home/user/.dvm/SEQ``, and copies data from ``/dev/xvdh`` to it."
msgstr ""

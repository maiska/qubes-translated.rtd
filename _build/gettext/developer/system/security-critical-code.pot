# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, test
# This file is distributed under the same license as the qubes-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: qubes-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-23 17:29+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../_doc/developer/system/security-critical-code.rst:1
#: b1b13134e18448948148034480525f30
msgid "Below is a list of security-critical (i.e., trusted) code components in Qubes OS. A successful attack against any of these components could compromise the system’s security. This code can be thought of as the Trusted Computing Base (TCB) of Qubes OS. One of the main goals of the project is to keep the TCB to an absolute minimum. The size of the current TCB is on the order order of hundreds of thousands of lines of C code, which is several orders of magnitude less than other OSes. (In Windows, Linux, and Mac OSes, the amount of trusted code is typically on the order of tens of *millions* of lines of C code.)"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:11
#: 4a60a091b78749439437732df88c7931
msgid "For more information, see :doc:`Qubes Security Goals </developer/system/security-design-goals>`."
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:14
#: 508219a7755949df9749ea5e5b4b635f
msgid "Security-critical Qubes-specific Components"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:16
#: 072b9cdf7ea64f86aaf87b27a4c12242
msgid "The following code components are security-critical in Qubes OS:"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:18
#: 7fc4d7e337ce49529d8fdeacda3b43d0
msgid "Dom0-side of the libvchan library"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:19
#: 88a8a359fb9446078091429c13f40b60
msgid "Dom0-side of the GUI virtualization code (``qubes-guid``)"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:20
#: 7fd0cb2818444f25a1890053ffc802e8
msgid "Dom0-side of the sound virtualization code (``pacat-simple-vchan``)"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:21
#: da68a3fee1d24da9adef317554f60621
msgid "Dom0-side in qrexec-related code (``qrexec_daemon``)"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:22
#: bdc49741386e447ebba475daef930dcd
msgid "VM memory manager (``qmemman``) that runs in Dom0"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:23
#: 1069e74b3c0b43eb8c9873edf386d64c
msgid "Select Qubes RPC servers that run in Dom0: ``qubes.ReceiveUpdates`` and ``qubes.SyncAppMenus``"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:25
#: 400abc43238148c5adfa4ff7834ecc93
msgid "The ``qubes.Filecopy`` RPC server that runs in a VM (critical because it could allow one VM to compromise another if the user allows a file copy operation to be performed between them)"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:30
#: e6db81cc9023452ca1ef7a74035a1715
msgid "Security-critical Third-party Components"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:32
#: fc2bbe37b84f400392dc1d96b71f1ed1
msgid "We did not create these components, but Qubes OS relies on them. At the current stage of the project, we cannot afford to spend the time to thoroughly review and audit them, so we more or less “blindly” trust that they are secure."
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:37
#: 68c89dcbe9094acfb9da1fd6fd7774b7
msgid "The Xen hypervisor"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:38
#: 1dba80f909a74c9183f52777ddea2490
msgid "Xen’s xenstore backend running in Dom0"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:39
#: ec6099c84a3240c4bd73aa502044f69e
msgid "Xen’s block backend running in Dom0’s kernel"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:40
#: de1132d00efc4d148e1a94589933f77e
msgid "The RPM program used in Dom0 for verifying signatures on dom0 updates"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:41
#: 8a81a271edb0479b9aafe5906b13c210
msgid "Somewhat trusted: log viewing software in dom0 that parses VM-influenced logs"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:45
#: c6c9aa0acd244913abc26d05a9232053
msgid "Attacks on Networking Components"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:47
#: 4c1afbad8d174ee6890ef5c62c75ee65
msgid "Here are two examples of networking components that an adversary might seek to attack (or in which to exploit a vulnerability as part of an attack):"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:51
#: ccbd3986d17944f882b71689a497e80f
msgid "Xen network PV frontends"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:52
#: 7b03b9689f4443919205b8b765e161f5
msgid "VMs’ core networking stacks (core TCP/IP code)"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:54
#: 69c76617218247beb59ee9456dafc6ac
msgid "Hypothetically, an adversary could compromise a NetVM, ``sys-net-1``, and try to use it to attack the VMs connected to that NetVM. However, Qubes allows for the existence of more than one NetVM, so the adversary would not be able to use ``sys-net-1`` in order to attack VMs connected to a *different* NetVM, ``sys-net-2`` without also compromising ``sys-net-2``. In addition, the adversary would not be able to use ``sys-net-1`` (or, for that matter, ``sys-net-2``) to attack VMs that have networking disabled (i.e., VMs that are not connected to any NetVM)."
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:65
#: f1cb729fe56846c6a29aa8288e1d2e6d
msgid "Buggy Code vs. Backdoored Code"
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:67
#: 792da1fa3d6f43e0a2e7a7d5246e0a60
msgid "There is an important distinction between buggy code and maliciously backdoored code. We could have the most secure architecture and the most bulletproof TCB that perfectly isolates all domains from each other, but it would all be pretty useless if all the code we ran inside our domains (e.g. the code in our email clients, word processors, and web browsers) were backdoored. In that case, only network-isolated domains would be somewhat trustworthy."
msgstr ""

#: ../../../_doc/developer/system/security-critical-code.rst:75
#: db4bc73d10a741e69997d61c6ba7fdad
msgid "This means that we must trust at least some of the vendors that supply the code we run inside our domains. (We don’t have to trust *all* of them, but we at least have to trust the few that provide the apps we use in the most critical domains.) In practice, we trust the software provided by the `Fedora Project <https://getfedora.org/>`__. This software is signed by Fedora distribution keys, so it is also critical that the tools used in domains for software updates (``dnf`` and ``rpm``) are trustworthy."
msgstr ""
